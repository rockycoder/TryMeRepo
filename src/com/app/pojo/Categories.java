package com.app.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Categories generated by hbm2java
 */
@Entity
@Table(name = "categories")
public class Categories implements java.io.Serializable,Comparable<Categories> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Integer categoriesId;
	private String categoriesImage;
	private Date dateAdded;
	private Date lastModified;
	private String categoryName;
	private Long sortorder;
	private List<Products> productses = new ArrayList<Products>(0);

	public Categories() {
	}

	
	public Categories(Integer categoriesId, String categoriesImage, Date dateAdded,
			Date lastModified, String categoryName, Long sortorder,
			List<Products> productses) {
		super();
		this.categoriesId = categoriesId;
		this.categoriesImage = categoriesImage;
		this.dateAdded = dateAdded;
		this.lastModified = lastModified;
		this.categoryName = categoryName;
		this.sortorder = sortorder;
		this.productses = productses;
	}
	
	


	public Categories(int categoriesId) {
		this.categoriesId = categoriesId;
	}

	@Id
	@Column(name = "categories_id", unique = true, nullable = false)
	public Integer getCategoriesId() {
		return this.categoriesId;
	}

	public void setCategoriesId(Integer categoriesId) {
		this.categoriesId = categoriesId;
	}

	@Column(name = "categories_image", length = 64)
	public String getCategoriesImage() {
		return this.categoriesImage;
	}

	public void setCategoriesImage(String categoriesImage) {
		this.categoriesImage = categoriesImage;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_added", length = 29)
	public Date getDateAdded() {
		return this.dateAdded;
	}

	public void setDateAdded(Date dateAdded) {
		this.dateAdded = dateAdded;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified", length = 29)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@Column(name = "category_name", length = 32)
	public String getCategoryName() {
		return this.categoryName;
	}

	public void setCategoryName(String categoryName) {
		this.categoryName = categoryName;
	}


	@Column(name = "sortorder")
	public Long getSortorder() {
		return this.sortorder;
	}

	public void setSortorder(Long sortorder) {
		this.sortorder = sortorder;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "categories")
	@JsonManagedReference
	public List<Products> getProductses() {
		return this.productses;
	}

	public void setProductses(List<Products> productses) {
		this.productses = productses;
	}


	@Override
	public int compareTo(Categories o) {
		
		return this.getCategoriesId().compareTo(o.getCategoriesId());
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((categoriesId == null) ? 0 : categoriesId.hashCode());
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Categories other = (Categories) obj;
		if (categoriesId == null) {
			if (other.categoriesId != null)
				return false;
		} else if (!categoriesId.equals(other.categoriesId))
			return false;
		return true;
	}

	
	
	
}
